import { APIClientOptions, Checksum256, Checksum256Type, Struct } from '@wharfkit/antelope';
import { APIClient as LeapAPIClient } from '@wharfkit/apiclient-leap';
import { APIClient as TelosAPIClient } from '@wharfkit/apiclient-telos';
import { APIClient as WAXAPIClient } from '@wharfkit/apiclient-wax';
import { Logo } from './logo';
import type { ExplorerDefinitionType, LogoType } from './types';
/**
 * A list of string-based chain names to assist autocompletion
 */
export type ChainKeys = 'Antelope' | 'EOS' | 'FIO' | 'FIOTestnet' | 'Jungle4' | 'KylinTestnet' | 'Libre' | 'LibreTestnet' | 'Proton' | 'ProtonTestnet' | 'Telos' | 'TelosTestnet' | 'WAX' | 'WAXTestnet' | 'UX';
/**
 * A list of chain IDs and their ChainIndices for reference lookups
 */
export declare const chainIdsToIndices: Map<Checksum256Type, ChainKeys>;
/**
 * Type mapping for APIClient classes by Chain
 */
export type ClientType<T> = T extends 'WAX' ? WAXAPIClient : T extends 'WAXTestnet' ? WAXAPIClient : T extends 'Telos' ? TelosAPIClient : T extends 'TelosTestnet' ? TelosAPIClient : LeapAPIClient;
/**
 * Method to return a specific chain client given an ID
 */
export declare function getChainClient<ChainName extends ChainKeys = 'Antelope'>(id: Checksum256Type, options: APIClientOptions): ClientType<ChainName>;
/**
 * A definition that defines the connection information and metadata for a specific chain
 */
export declare class ChainDefinition<ChainName extends ChainKeys = 'Antelope'> extends Struct {
    /**
     * The chain ID.
     */
    id: Checksum256;
    /**
     * The base URL of the chain's API endpoint (e.g. https://jungle4.greymass.com).
     */
    url: string;
    /**
     * The human readable name for the chain
     */
    name: string;
    /**
     * The absolute URL(s) to the chain's logo.
     */
    logo?: LogoType;
    /**
     * The explorer definition for the chain.
     */
    explorer?: ExplorerDefinitionType;
    static from<ChainName extends ChainKeys = 'Antelope'>(data: any): ChainDefinition<ChainName>;
    getLogo(): Logo | undefined;
    getClient(options?: APIClientOptions): ClientType<ChainName>;
}
/**
 * An exported list of known ChainDefinition entries for immediate use.
 */
export declare const Chains: {
    EOS: ChainDefinition<"EOS">;
    FIO: ChainDefinition<"FIO">;
    FIOTestnet: ChainDefinition<"FIOTestnet">;
    Jungle4: ChainDefinition<"Jungle4">;
    KylinTestnet: ChainDefinition<"KylinTestnet">;
    Libre: ChainDefinition<"Libre">;
    LibreTestnet: ChainDefinition<"LibreTestnet">;
    Proton: ChainDefinition<"Proton">;
    ProtonTestnet: ChainDefinition<"ProtonTestnet">;
    Telos: ChainDefinition<"Telos">;
    TelosTestnet: ChainDefinition<"TelosTestnet">;
    WAX: ChainDefinition<"WAX">;
    WAXTestnet: ChainDefinition<"WAXTestnet">;
    UX: ChainDefinition<"UX">;
};
//# sourceMappingURL=chains.d.ts.map